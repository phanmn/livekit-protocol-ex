syntax = "proto3";

package livekit_protocol_ex.rpc;

option go_package = "github.com/livekit/protocol/rpc";

import "google/protobuf/empty.proto";
import "options.proto";
import "livekit_internal.proto";
import "livekit_rtc.proto";

service WHIP {
  rpc Create(WHIPCreateRequest) returns (WHIPCreateResponse) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      queue: true
      topic_params: {
        group: "common"
        names: ["topic"]
        typed: true
      };
    };
  }
}

message WHIPCreateRequest {
  message TrackList {
    repeated string track_names = 1;
  }

  livekit_protocol_ex.StartSession start_session = 1;
  string offer_sdp = 2;
  map<string, TrackList> subscribed_participant_tracks = 3;
  bool from_ingress = 4;
}

message WHIPCreateResponse {
  string answer_sdp = 1;
  string participant_id = 2;
  repeated livekit_protocol_ex.ICEServer ice_servers = 3;
  string ice_session_id = 4;
}

// ----------------------------------

service WHIPParticipant {
  rpc ICETrickle(WHIPParticipantICETrickleRequest) returns (google.protobuf.Empty) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      topic_params: {
        group: "common"
        names: ["topic"]
        typed: true
      };
    };
  }

  rpc ICERestart(WHIPParticipantICERestartRequest) returns (WHIPParticipantICERestartResponse) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      topic_params: {
        group: "common"
        names: ["topic"]
        typed: true
      };
    };
  }

  rpc DeleteSession(WHIPParticipantDeleteSessionRequest) returns (google.protobuf.Empty) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      topic_params: {
        group: "common"
        names: ["topic"]
        typed: true
      };
    };
  }
}

message WHIPParticipantICETrickleRequest {
  string room = 1;
  string participant_identity = 2;
  string participant_id = 3;
  string ice_session_id = 4;
  string sdp_fragment = 5;
}

message WHIPParticipantICERestartRequest {
  string room = 1;
  string participant_identity = 2;
  string participant_id = 3;
  string sdp_fragment = 4;
}

message WHIPParticipantICERestartResponse {
  string ice_session_id = 1;
  string sdp_fragment = 2;
}

message WHIPParticipantDeleteSessionRequest {
  string room = 1;
  string participant_identity = 2;
  string participant_id = 3;
  bool from_sweeper = 4;
}
