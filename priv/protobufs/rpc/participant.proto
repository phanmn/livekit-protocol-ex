// Copyright 2023 LiveKit, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package livekit_protocol_ex.rpc;

option go_package = "github.com/livekit/protocol/rpc";

import "options.proto";
import "livekit_models.proto";
import "livekit_room.proto";

service Participant {
  rpc RemoveParticipant(livekit_protocol_ex.RoomParticipantIdentity) returns (livekit_protocol_ex.RemoveParticipantResponse) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      topic_params: {
        group: "participant"
        names: ["participant"]
        typed: true
      };
    };
  };
  rpc MutePublishedTrack(livekit_protocol_ex.MuteRoomTrackRequest) returns (livekit_protocol_ex.MuteRoomTrackResponse) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      topic_params: {
        group: "participant"
        names: ["participant"]
        typed: true
      };
    };
  };
  rpc UpdateParticipant(livekit_protocol_ex.UpdateParticipantRequest) returns (livekit_protocol_ex.ParticipantInfo) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      topic_params: {
        group: "participant"
        names: ["participant"]
        typed: true
      };
    };
  };
  rpc UpdateSubscriptions(livekit_protocol_ex.UpdateSubscriptionsRequest) returns (livekit_protocol_ex.UpdateSubscriptionsResponse) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      topic_params: {
        group: "participant"
        names: ["participant"]
        typed: true
      };
    };
  };
  rpc ForwardParticipant(livekit_protocol_ex.ForwardParticipantRequest) returns (livekit_protocol_ex.ForwardParticipantResponse) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      topic_params: {
        group: "participant"
        names: ["participant"]
        typed: true
      };
    };
  };
  rpc MoveParticipant(livekit_protocol_ex.MoveParticipantRequest) returns (livekit_protocol_ex.MoveParticipantResponse) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      topic_params: {
        group: "participant"
        names: ["participant"]
        typed: true
      };
    };
  };
  rpc PerformRpc(livekit_protocol_ex.PerformRpcRequest) returns (livekit_protocol_ex.PerformRpcResponse) {
    option (livekit_protocol_ex.psrpc.options) = {
      topics: true
      topic_params : {
        group: "participant"
        names: ["participant"]
        typed: true
      };
    };
  };
}
