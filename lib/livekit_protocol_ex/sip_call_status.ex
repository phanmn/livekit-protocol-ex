# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule LivekitProtocolEx.SIPCallStatus do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :SCS_CALL_INCOMING
    def default() do
      :SCS_CALL_INCOMING
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:SCS_CALL_INCOMING) do
    0
  end

  def encode(:SCS_PARTICIPANT_JOINED) do
    1
  end

  def encode(:SCS_ACTIVE) do
    2
  end

  def encode(:SCS_DISCONNECTED) do
    3
  end

  def encode(:SCS_ERROR) do
    4
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :SCS_CALL_INCOMING
  end

  def decode(1) do
    :SCS_PARTICIPANT_JOINED
  end

  def decode(2) do
    :SCS_ACTIVE
  end

  def decode(3) do
    :SCS_DISCONNECTED
  end

  def decode(4) do
    :SCS_ERROR
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [
      {0, :SCS_CALL_INCOMING},
      {1, :SCS_PARTICIPANT_JOINED},
      {2, :SCS_ACTIVE},
      {3, :SCS_DISCONNECTED},
      {4, :SCS_ERROR}
    ]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:SCS_CALL_INCOMING) do
      true
    end

    def has_constant?(:SCS_PARTICIPANT_JOINED) do
      true
    end

    def has_constant?(:SCS_ACTIVE) do
      true
    end

    def has_constant?(:SCS_DISCONNECTED) do
      true
    end

    def has_constant?(:SCS_ERROR) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
