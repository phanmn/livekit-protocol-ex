# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule LivekitProtocolEx.IngressState.Status do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :ENDPOINT_INACTIVE
    def default() do
      :ENDPOINT_INACTIVE
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:ENDPOINT_INACTIVE) do
    0
  end

  def encode(:ENDPOINT_BUFFERING) do
    1
  end

  def encode(:ENDPOINT_PUBLISHING) do
    2
  end

  def encode(:ENDPOINT_ERROR) do
    3
  end

  def encode(:ENDPOINT_COMPLETE) do
    4
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :ENDPOINT_INACTIVE
  end

  def decode(1) do
    :ENDPOINT_BUFFERING
  end

  def decode(2) do
    :ENDPOINT_PUBLISHING
  end

  def decode(3) do
    :ENDPOINT_ERROR
  end

  def decode(4) do
    :ENDPOINT_COMPLETE
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [
      {0, :ENDPOINT_INACTIVE},
      {1, :ENDPOINT_BUFFERING},
      {2, :ENDPOINT_PUBLISHING},
      {3, :ENDPOINT_ERROR},
      {4, :ENDPOINT_COMPLETE}
    ]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:ENDPOINT_INACTIVE) do
      true
    end

    def has_constant?(:ENDPOINT_BUFFERING) do
      true
    end

    def has_constant?(:ENDPOINT_PUBLISHING) do
      true
    end

    def has_constant?(:ENDPOINT_ERROR) do
      true
    end

    def has_constant?(:ENDPOINT_COMPLETE) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
