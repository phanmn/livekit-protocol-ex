# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule LivekitProtocolEx.EgressStatus do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :EGRESS_STARTING
    def default() do
      :EGRESS_STARTING
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:EGRESS_STARTING) do
    0
  end

  def encode(:EGRESS_ACTIVE) do
    1
  end

  def encode(:EGRESS_ENDING) do
    2
  end

  def encode(:EGRESS_COMPLETE) do
    3
  end

  def encode(:EGRESS_FAILED) do
    4
  end

  def encode(:EGRESS_ABORTED) do
    5
  end

  def encode(:EGRESS_LIMIT_REACHED) do
    6
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :EGRESS_STARTING
  end

  def decode(1) do
    :EGRESS_ACTIVE
  end

  def decode(2) do
    :EGRESS_ENDING
  end

  def decode(3) do
    :EGRESS_COMPLETE
  end

  def decode(4) do
    :EGRESS_FAILED
  end

  def decode(5) do
    :EGRESS_ABORTED
  end

  def decode(6) do
    :EGRESS_LIMIT_REACHED
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [
      {0, :EGRESS_STARTING},
      {1, :EGRESS_ACTIVE},
      {2, :EGRESS_ENDING},
      {3, :EGRESS_COMPLETE},
      {4, :EGRESS_FAILED},
      {5, :EGRESS_ABORTED},
      {6, :EGRESS_LIMIT_REACHED}
    ]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:EGRESS_STARTING) do
      true
    end

    def has_constant?(:EGRESS_ACTIVE) do
      true
    end

    def has_constant?(:EGRESS_ENDING) do
      true
    end

    def has_constant?(:EGRESS_COMPLETE) do
      true
    end

    def has_constant?(:EGRESS_FAILED) do
      true
    end

    def has_constant?(:EGRESS_ABORTED) do
      true
    end

    def has_constant?(:EGRESS_LIMIT_REACHED) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
