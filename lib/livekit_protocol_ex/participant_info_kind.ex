# Code generated by protox. Don't edit.
# credo:disable-for-this-file
defmodule LivekitProtocolEx.ParticipantInfo.Kind do
  @moduledoc false
  @type t :: %__MODULE__{}
  defstruct []

  (
    @spec default() :: :STANDARD
    def default() do
      :STANDARD
    end
  )

  @spec encode(atom() | String.t()) :: integer() | atom()
  def encode(:STANDARD) do
    0
  end

  def encode(:INGRESS) do
    1
  end

  def encode(:EGRESS) do
    2
  end

  def encode(:SIP) do
    3
  end

  def encode(:AGENT) do
    4
  end

  def encode(:CONNECTOR) do
    7
  end

  def encode(x) do
    x
  end

  @spec decode(integer()) :: atom() | integer()
  def decode(0) do
    :STANDARD
  end

  def decode(1) do
    :INGRESS
  end

  def decode(2) do
    :EGRESS
  end

  def decode(3) do
    :SIP
  end

  def decode(4) do
    :AGENT
  end

  def decode(7) do
    :CONNECTOR
  end

  def decode(x) do
    x
  end

  @spec constants() :: [{integer(), atom()}]
  def constants() do
    [{0, :STANDARD}, {1, :INGRESS}, {2, :EGRESS}, {3, :SIP}, {4, :AGENT}, {7, :CONNECTOR}]
  end

  @spec has_constant?(any()) :: boolean()
  (
    def has_constant?(:STANDARD) do
      true
    end

    def has_constant?(:INGRESS) do
      true
    end

    def has_constant?(:EGRESS) do
      true
    end

    def has_constant?(:SIP) do
      true
    end

    def has_constant?(:AGENT) do
      true
    end

    def has_constant?(:CONNECTOR) do
      true
    end

    def has_constant?(_) do
      false
    end
  )
end
